{
  "version": 3,
  "sources": [
    "components/AddCategory.js",
    "helpers/getGif.js",
    "components/GifGridItem.js",
    "components/GifGrid.js",
    "hooks/useFetchGifs.js",
    "GifExpertApp.js",
    "index.js"
  ],
  "names": [
    "AddCategory",
    "setCategories",
    "useState",
    "inputValue",
    "setInputValue",
    "onSubmit",
    "e",
    "preventDefault",
    "trim",
    "length",
    "categories",
    "type",
    "value",
    "onChange",
    "target",
    "getGifs",
    "category",
    "a",
    "url",
    "encodeURI",
    "fetch",
    "respuesta",
    "json",
    "data",
    "gifs",
    "map",
    "id",
    "title",
    "images",
    "downsized_medium",
    "console",
    "log",
    "GifGridItem",
    "className",
    "src",
    "alt",
    "GifGrid",
    "loading",
    "state",
    "setState",
    "useEffect",
    "then",
    "imgs",
    "useFetchGifs",
    "img",
    "key",
    "GifExpertApp",
    "ReactDOM",
    "render",
    "document",
    "getElementById"
  ],
  "mappings": "6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAehD,OACE,0BAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdhB,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MACrCR,EAAcQ,Q,uBCPLG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAKGI,MAAMF,GALT,cAKfG,EALe,gBAMEA,EAAUC,OANZ,uBAMbC,EANa,EAMbA,KACFC,EAAOD,EAAKE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,OAAd,MAA4B,CAChDF,KACAC,QACAT,IAAG,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAQC,iBAAiBX,QAEhCY,QAAQC,IAAIR,EAAMC,GAZG,kBAadA,GAbc,4CAAH,sDCEPQ,EAAc,SAAC,GAAuB,EAArBN,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IACvC,OACE,yBAAKe,UAAU,0CACb,yBAAKC,IAAKhB,EAAKiB,IAAKR,MCDbS,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCqB,KAAM,GACNc,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAYxC,OANAC,qBAAU,WACRzB,EAAQC,GAAUyB,MAAK,SAACC,GACtBH,EAAS,CAAEhB,KAAMmB,EAAML,SAAS,SAEjC,CAACrB,IAEGsB,EDV2BK,CAAa3B,GAAjCY,EADyB,EAC/BL,KAAcc,EADiB,EACjBA,QAEtB,OACE,oCACE,wBAAIJ,UAAU,qCAAd,IAAoDjB,EAApD,KACCqB,GACC,uBAAGJ,UAAU,oCAAb,kBAEF,yBAAKA,UAAU,aACZL,EAAOH,KAAI,SAACmB,GAAD,OACV,kBAAC,EAAD,eAAaC,IAAKD,EAAIlB,IAAQkB,UEX3BE,EAAe,WAAO,IAAD,EACI5C,mBAAS,CAAC,cADd,mBACzBQ,EADyB,KACbT,EADa,KAGhC,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACGS,EAAWe,KAAI,SAACT,GAAD,OACd,kBAAC,EAAD,CAASA,SAAUA,EAAU6B,IAAK7B,UCT5C+B,IAASC,OAEP,kBAAC,EAAD,MAEAC,SAASC,eAAe,U",
  "file": "static/js/main.8c4e2e68.chunk.js",
  "sourcesContent": [
    "import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = ({ target: { value } }) => {\n    setInputValue(value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories((categories) => [inputValue, ...categories]);\n      setInputValue('');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type='text' value={inputValue} onChange={handleInputChange} />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n",
    "export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=Co9mHsk9bqatahJRyqU4B0S8RTNBvW4L`;\n\n  const respuesta = await fetch(url);\n  const { data } = await respuesta.json();\n  const gifs = data.map(({ id, title, images }) => ({\n    id,\n    title,\n    url: images?.downsized_medium.url,\n  }));\n  console.log(data, gifs);\n  return gifs;\n};\n",
    "import React from 'react';\n\nexport const GifGridItem = ({ id, title, url }) => {\n  return (\n    <div className='card animate__animated animate__fadeIn'>\n      <img src={url} alt={title} />\n    </div>\n  );\n};\n",
    "import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className='animate__animated animate__fadeIn'> {category} </h3>\n      {loading && (\n        <p className='animate__animated animate__flash'>'Cargando....'</p>\n      )}\n      <div className='card-grid'>\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n",
    "import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGif';\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setState({ data: imgs, loading: false });\n    });\n  }, [category]);\n\n  return state;\n};\n",
    "import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n  const [categories, setCategories] = useState(['One Punch']);\n\n  return (\n    <>\n      <h2>GifApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <ol>\n        {categories.map((category) => (\n          <GifGrid category={category} key={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <GifExpertApp />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n"
  ],
  "sourceRoot": ""
}
